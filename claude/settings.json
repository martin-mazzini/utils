{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Edit(**)",
      "Bash(npm run test:*)",
      "Bash(npm run lint:*)",
      "Bash(yarn run :*)",
      "Bash(yarn test:*)",
      "Bash(yarn lint:*)",
      "Bash(vitest:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(git status)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git branch)",
      "Bash(git branch -a)",
      "Bash(git grep:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(ls:*)",
      "Bash(pwd)",
      "Bash(which:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(pnpm build)",
      "Bash(pnpm build)",
      "Bash(pnpm lint)",
      "Bash(pnpm audit)",
      "Bash(pnpm outdated)",
      "Bash(pnpm list)",
      "Bash(pnpm ls)",
      "Bash(pnpm why:*)",
      "Bash(pnpm info:*)",
      "Bash(pnpm help)",
      "Bash(pnpm config get:*)",
      "Bash(pnpm doctor)",
      "Bash(feature)",
      "Bash(feature :*)",
      "Bash(file:*)",
      "Bash(stat:*)",
      "Bash(cut:*)",
      "Bash(tr:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(jq:*)",
      "Bash(node --version)",
      "Bash(npm --version)",
      "Bash(python --version)",
      "Bash(npm list:*)",
      "Bash(npm view:*)",
      "Bash(make -n:*)",
      "Bash(uname:*)",
      "Bash(whoami)",
      "Bash(date:*)",
      "Bash(echo:*)",
      "Bash(git log --oneline --graph --decorate origin/master..HEAD)",
      "Bash(git diff $(git merge-base HEAD origin/master)...HEAD)",
      "Bash(git show:*)",
      "Bash(git blame:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(git remote -v)",
      "Bash(git status --short --branch)",
      "Bash(git branch --show-current)",
      "Bash(git rev-parse:*)",
      "Bash(git rev-list:*)",
      "Bash(git merge-base:*)",
      "Bash(git describe:*)",
      "Bash(git name-rev:*)",
      "Bash(git for-each-ref:*)",
      "Bash(git show-ref:*)",
      "Bash(git show-branch:*)",
      "Bash(git shortlog:*)",
      "Bash(git reflog show:*)",
      "Bash(git ls-tree:*)",
      "Bash(git ls-files:*)",
      "Bash(git cat-file:*)",
      "Bash(git check-ignore:*)",
      "Bash(git check-attr:*)",
      "Bash(git cherry:*)",
      "Bash(git range-diff:*)",
      "Bash(git verify-commit:*)",
      "Bash(git verify-tag:*)",
      "Bash(git fsck)",
      "Bash(git tag -l:*)",
      "Bash(git tag -n:*)",
      "Bash(git notes list)",
      "Bash(git notes show:*)",
      "Bash(git config -l)",
      "Bash(git config --list)",
      "Bash(git config --get:*)",
      "Bash(git config --get-all:*)",
      "Bash(git config --get-regexp:*)",
      "Bash(git --version)",
      "Bash(git version)",
      "Bash(git help:*)",
      "Bash(go version)",
      "Bash(go env:*)",
      "Bash(go list:*)",
      "Bash(go test:*)",
      "Bash(go test -v:*)",
      "Bash(go test -run:*)",
      "Bash(go test -bench:*)",
      "Bash(go test -cover:*)",
      "Bash(go test -race:*)",
      "Bash(go build:*)",
      "Bash(go build -n:*)",
      "Bash(go build -v:*)",
      "Bash(go build -x:*)",
      "Bash(go fmt:*)",
      "Bash(go vet:*)",
      "Bash(go doc:*)",
      "Bash(go help:*)",
      "Bash(go tool:*)",
      "Bash(go generate -n:*)",
      "Bash(gofmt:*)",
      "Bash(golint:*)",
      "Bash(staticcheck:*)",
      "Bash(golangci-lint run:*)",
      "Bash(go work:*)",
      "Bash(go mod graph)",
      "Bash(go mod verify)",
      "Bash(go mod why:*)",
      "Bash(go clean -n:*)"
    ],
    "deny": [
      "Edit(**/.git/**)",
      "Write(**/.git/**)",
      "Edit(**/.git/config)",
      "Write(**/.git/config)",
      "Edit(**/.env*)",
      "Write(**/.env*)",
      "Bash(rm -rf /:*)",
      "Bash(rm -rf ../:*)",
      "Bash(sudo:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Write(**/package.json)",
      "Write(**/package-lock.json)"
    ],
    "defaultMode": "acceptEdits",
    "disableBypassPermissionsMode": "disable"
  },
  "hooks": {
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "/Users/martin/.claude/hooks/finish.sh"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "/Users/martin/.claude/hooks/input-needed.sh"
          }
        ]
      }
    ]
  },
  "feedbackSurveyState": {
    "lastShownTime": 1754105372274
  }
}